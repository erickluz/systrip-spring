version: '3.1'
services:
  db:
    image: postgres:14
    restart: always
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: 123456
    volumes:
      - type: bind
        source: ./driver/deploy/script/driver.sql
        target: /docker-entrypoint-initdb.d/driver.sql
        volume:
          nocopy: true  # flag to disable copying of data from a container when a volume is created
      - type: bind
        source: ./passenger/deploy/script/passenger.sql
        target: /docker-entrypoint-initdb.d/passenger.sql
        volume:
          nocopy: true  # flag to disable copying of data from a container when a volume is created
      - type: bind
        source: ./trip/deploy/script/trip.sql
        target: /docker-entrypoint-initdb.d/trip.sql
        volume:
          nocopy: true  # flag to disable copying of data from a container when a volume is created
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    container_name: rabbitmq
    ports: 
      - "8080:8080"
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: adm
      RABBITMQ_DEFAULT_PASS: adm
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
  reddis:
    image: redis:7.0.5
    restart: always
    ports:
        - "6379:6379"
  driver:
    image: erickluz360/driver:latest
    expose:
      - "8082"
    deploy:
      replicas: 2
    depends_on:
      - db
      - rabbitmq
      - reddis
  passenger:
    image: erickluz360/passenger:latest
    expose:
      - "8084"
    deploy:
      replicas: 2
    depends_on:
      - driver
  trip:
    image: erickluz360/trip:latest
    ports:
      - 8083:8083
    depends_on:
      - passenger
  nginx-driver:
    image: nginx:latest
    volumes:
      - ./nginx-driver.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - driver
    ports:
      - "9000:9000"
  nginx-passenger:
    image: nginx:latest
    volumes:
      - ./nginx-passenger.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - driver
    ports:
      - "9001:9001"
  elasticsearch:
    image: elasticsearch:8.6.2
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
      - xpack.security.enabled=false
    ports: 
      - "9200:9200"
  kibana:
    image: kibana:8.6.2
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
  logstash:
    image: logstash:8.6.2
    volumes:
        - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
        - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch